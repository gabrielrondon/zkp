import { writeFileSync, mkdirSync } from 'fs';
import { dirname, join } from 'path';
import { fileURLToPath } from 'url';

const __dirname = dirname(fileURLToPath(import.meta.url));

// For demo purposes, we'll create a mock verification key
// In a real implementation, this would be generated from the actual circuit
const mockVerificationKey = {
  protocol: "groth16",
  curve: "bn128",
  nPublic: 1,
  vk_alpha_1: [
    "20491192805390485299153009773594534940189261866228447918068658471970481763042",
    "9383485363053290200918347156157836566562967994039712273449902621266178545958",
    "1"
  ],
  vk_beta_2: [
    [
      "6375614351688725206403948262868962793625744043794305715222011528459656738731",
      "4252822878758300859123897981450591353533073413197771768651442665752259397132"
    ],
    [
      "10505242626370262277552901082094356697409835680220590971873171140371331206856",
      "21847035105528745403288232691147584728191162732299865338377159692350059136679"
    ],
    ["1", "0"]
  ],
  vk_gamma_2: [
    [
      "10857046999023057135944570762232829481370756359578518086990519993285655852781",
      "11559732032986387107991004021392285783925812861821192530917403151452391805634"
    ],
    [
      "8495653923123431417604973247489272438418190587263600148770280649306958101930",
      "4082367875863433681332203403145435568316851327593401208105741076214120093531"
    ],
    ["1", "0"]
  ],
  vk_delta_2: [
    [
      "10857046999023057135944570762232829481370756359578518086990519993285655852781",
      "11559732032986387107991004021392285783925812861821192530917403151452391805634"
    ],
    [
      "8495653923123431417604973247489272438418190587263600148770280649306958101930",
      "4082367875863433681332203403145435568316851327593401208105741076214120093531"
    ],
    ["1", "0"]
  ],
  vk_alphabeta_12: [
    [
      [
        "2029413683389138792403550203267699914886160938906632433982220835551125967885",
        "21072700047562757817161031222997517981543347628379360635925549008442030252106"
      ],
      [
        "5940354580057074848093997050200682056184807770593307860589430076672439820312",
        "12156638873931618554171829126792193045421052652279363021382169897324752428276"
      ],
      [
        "7898200236362823042373859371574133993780991612861777490112507062703164551277",
        "7074218545237549455313236346927434013100842096812539264420499035217050630853"
      ]
    ]
  ],
  IC: [
    [
      "16225148364316337376768119297456868908427925829817748684139175309620217098814",
      "5167268689450204162046084442581051565997733233062478062907939885739029199870",
      "1"
    ],
    [
      "20092374544241271947167705415236547216282373543400969363973141709075609869435",
      "218471049496348816209377495444072374753934591327791861542742962471713723",
      "1"
    ]
  ]
};

// Create necessary directories
const publicDir = join(__dirname, '..', 'public');
const circuitsDir = join(publicDir, 'circuits');
mkdirSync(circuitsDir, { recursive: true });

// Write mock verification key
writeFileSync(
  join(circuitsDir, 'verification_key.json'),
  JSON.stringify(mockVerificationKey, null, 2)
);

// Create a mock WASM file (empty for now, just to prevent 404)
writeFileSync(join(circuitsDir, 'object_properties.wasm'), '');

console.log('ZKP setup completed successfully!');